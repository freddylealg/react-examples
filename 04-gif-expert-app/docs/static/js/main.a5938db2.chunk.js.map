{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","placeholder","value","onChange","target","handleInputChange","getGifts","category","a","url","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","i","ReactDOM","render","document","getElementById"],"mappings":"mMAqCeA,EAlCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEnB,EAAqCC,mBAAU,IAA/C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,YAAY,sBACZC,MAAQV,EACRW,SAAW,SAACR,GAAD,OAnBG,SAACA,GACvBF,EAAeE,EAAES,OAAOF,OAkBEG,CAAkBV,S,+BCzBvCW,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACL,mCACTC,EAFc,iDAEkCF,EAFlC,6BACL,oCADK,SAGGG,MAAOD,GAHV,cAGdE,EAHc,gBAICA,EAASC,OAJV,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QAVtB,kBAabK,GAba,4CAAH,sDCCRO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAEpC,OACI,qBAAKa,UAAU,yCAAf,SACI,qBAAKC,IAAKd,EAAKe,IAAKN,OCFnBO,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAErB,ECFwB,SAACA,GACzB,MAA0BhB,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAW,WACPvB,EAAUC,GAAWuB,MACjB,SAAAC,GACIH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAAEnB,IAEEoB,EDfiBK,CAAczB,GAA/BM,EAAP,EAAOA,KAAMa,EAAb,EAAaA,QAEb,OACI,qCACI,6BAAMnB,IAEJmB,GAAW,2CAEb,qBAAKJ,UAAU,YAAf,SACQT,EAAKE,KAAK,SAAAC,GACN,OACI,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEO1BgB,EArBM,WAEjB,MAAoC1C,mBAAS,CAAC,eAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BACES,EAAWgB,KAAK,SAACR,EAAU2B,GACzB,OAAO,cAAC,EAAD,CAAS3B,SAAUA,GAAeA,Y,MCXzD4B,IAASC,OAAQ,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.a5938db2.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue ] = useState ('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories( categories => [inputValue, ...categories] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                placeholder=\"AÃ±adir categoria\"\r\n                value={ inputValue }\r\n                onChange= {(e) => handleInputChange(e)}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","\r\nexport const getGifts = async( category ) => {\r\n    const apiKey = 'seElqJTab8zGdVKqBbrCb36wNjNWNnZj';\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=${apiKey}`;\r\n    const response = await fetch( url );\r\n    const {data} = await response.json()\r\n    \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\" >\r\n            <img src={url} alt={title} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data, loading} = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n\r\n            { loading && <p>Loading...</p> }\r\n\r\n            <div className=\"card-grid\" >    \r\n                {   data.map( img => {\r\n                        return (\r\n                            <GifGridItem \r\n                                key={img.id}\r\n                                {...img} \r\n                            />\r\n                        );\r\n                    }) \r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifts } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n        getGifts( category ).then(\r\n            imgs => { \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                }) \r\n            }\r\n        );\r\n    }, [ category ]);\r\n\r\n    return state;\r\n}","import { useState} from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Programing']);\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n            <ol>\r\n            { categories.map( (category, i ) => {\r\n                return <GifGrid category={category} key={category}/>;\r\n                }) \r\n            }\r\n            </ol>\r\n        </div>\r\n        );\r\n}\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render( <GifExpertApp />, document.getElementById('root') );\n\n"],"sourceRoot":""}